// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using fordito;
//
//    var fordito = Fordito.FromJson(jsonString);

namespace fordito
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Fordito
    {
        [JsonProperty("data")]
        public Data Data { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("detections")]
        public Detection[][] Detections { get; set; }
    }

    public partial class Detection
    {
        [JsonProperty("language")]
        public string Language { get; set; }

        [JsonProperty("confidence")]
        public long Confidence { get; set; }

        [JsonProperty("isReliable")]
        public bool IsReliable { get; set; }
    }

    public partial class Fordito
    {
        public static Fordito FromJson(string json) => JsonConvert.DeserializeObject<Fordito>(json, fordito.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Fordito self) => JsonConvert.SerializeObject(self, fordito.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
